// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: net/session.proto

package net

import (
	_ "github.com/go-serv/foundation/internal/autogen/proto/go_serv"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//..
type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_net_session_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_net_session_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_net_session_proto_rawDescGZIP(), []int{0}
}

type Session_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lifetime uint32 `protobuf:"varint,1,opt,name=lifetime,proto3" json:"lifetime,omitempty"` // Session lifetime in seconds
	// Types that are assignable to KeyExchAlgo:
	//	*Session_Request_Dh
	//	*Session_Request_Ecdh
	//	*Session_Request_Rsa
	//	*Session_Request_Psk
	KeyExchAlgo isSession_Request_KeyExchAlgo `protobuf_oneof:"key_exch_algo"`
	BlockCypher Crypto_AEADCipher             `protobuf:"varint,20,opt,name=block_cypher,json=blockCypher,proto3,enum=go_serv.net.Crypto_AEADCipher" json:"block_cypher,omitempty"`
	NonceLength uint32                        `protobuf:"varint,30,opt,name=nonce_length,json=nonceLength,proto3" json:"nonce_length,omitempty"`
}

func (x *Session_Request) Reset() {
	*x = Session_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_net_session_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session_Request) ProtoMessage() {}

func (x *Session_Request) ProtoReflect() protoreflect.Message {
	mi := &file_net_session_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session_Request.ProtoReflect.Descriptor instead.
func (*Session_Request) Descriptor() ([]byte, []int) {
	return file_net_session_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Session_Request) GetLifetime() uint32 {
	if x != nil {
		return x.Lifetime
	}
	return 0
}

func (m *Session_Request) GetKeyExchAlgo() isSession_Request_KeyExchAlgo {
	if m != nil {
		return m.KeyExchAlgo
	}
	return nil
}

func (x *Session_Request) GetDh() *Crypto_PubKeyExchange_DiffieHellman {
	if x, ok := x.GetKeyExchAlgo().(*Session_Request_Dh); ok {
		return x.Dh
	}
	return nil
}

func (x *Session_Request) GetEcdh() *Crypto_PubKeyExchange_ECDH {
	if x, ok := x.GetKeyExchAlgo().(*Session_Request_Ecdh); ok {
		return x.Ecdh
	}
	return nil
}

func (x *Session_Request) GetRsa() *Crypto_PubKeyExchange_Rsa {
	if x, ok := x.GetKeyExchAlgo().(*Session_Request_Rsa); ok {
		return x.Rsa
	}
	return nil
}

func (x *Session_Request) GetPsk() *Crypto_PubKeyExchange_Psk {
	if x, ok := x.GetKeyExchAlgo().(*Session_Request_Psk); ok {
		return x.Psk
	}
	return nil
}

func (x *Session_Request) GetBlockCypher() Crypto_AEADCipher {
	if x != nil {
		return x.BlockCypher
	}
	return Crypto_AEADCipher_AES_GCM
}

func (x *Session_Request) GetNonceLength() uint32 {
	if x != nil {
		return x.NonceLength
	}
	return 0
}

type isSession_Request_KeyExchAlgo interface {
	isSession_Request_KeyExchAlgo()
}

type Session_Request_Dh struct {
	Dh *Crypto_PubKeyExchange_DiffieHellman `protobuf:"bytes,10,opt,name=dh,proto3,oneof"`
}

type Session_Request_Ecdh struct {
	Ecdh *Crypto_PubKeyExchange_ECDH `protobuf:"bytes,11,opt,name=ecdh,proto3,oneof"`
}

type Session_Request_Rsa struct {
	Rsa *Crypto_PubKeyExchange_Rsa `protobuf:"bytes,12,opt,name=rsa,proto3,oneof"`
}

type Session_Request_Psk struct {
	Psk *Crypto_PubKeyExchange_Psk `protobuf:"bytes,13,opt,name=psk,proto3,oneof"`
}

func (*Session_Request_Dh) isSession_Request_KeyExchAlgo() {}

func (*Session_Request_Ecdh) isSession_Request_KeyExchAlgo() {}

func (*Session_Request_Rsa) isSession_Request_KeyExchAlgo() {}

func (*Session_Request_Psk) isSession_Request_KeyExchAlgo() {}

type Session_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce  []byte `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	PubKey []byte `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3,oneof" json:"pub_key,omitempty"` // Server's public key
}

func (x *Session_Response) Reset() {
	*x = Session_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_net_session_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session_Response) ProtoMessage() {}

func (x *Session_Response) ProtoReflect() protoreflect.Message {
	mi := &file_net_session_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session_Response.ProtoReflect.Descriptor instead.
func (*Session_Response) Descriptor() ([]byte, []int) {
	return file_net_session_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Session_Response) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *Session_Response) GetPubKey() []byte {
	if x != nil {
		return x.PubKey
	}
	return nil
}

var File_net_session_proto protoreflect.FileDescriptor

var file_net_session_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6e, 0x65, 0x74, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x67, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x2e, 0x6e, 0x65, 0x74,
	0x1a, 0x17, 0x67, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6e, 0x65, 0x74, 0x2f, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x03, 0x0a, 0x07,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x97, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x42, 0x0a, 0x02, 0x64, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x5f, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x44, 0x69, 0x66, 0x66, 0x69, 0x65, 0x48, 0x65, 0x6c, 0x6c, 0x6d, 0x61, 0x6e, 0x48, 0x00, 0x52,
	0x02, 0x64, 0x68, 0x12, 0x3d, 0x0a, 0x04, 0x65, 0x63, 0x64, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x2e, 0x6e, 0x65, 0x74, 0x2e,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x5f, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x45, 0x43, 0x44, 0x48, 0x48, 0x00, 0x52, 0x04, 0x65, 0x63,
	0x64, 0x68, 0x12, 0x3a, 0x0a, 0x03, 0x72, 0x73, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x67, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x5f, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x52, 0x73, 0x61, 0x48, 0x00, 0x52, 0x03, 0x72, 0x73, 0x61, 0x12, 0x3a,
	0x0a, 0x03, 0x70, 0x73, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x5f, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x50, 0x73, 0x6b, 0x48, 0x00, 0x52, 0x03, 0x70, 0x73, 0x6b, 0x12, 0x41, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x79, 0x70, 0x68, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x43,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x5f, 0x41, 0x45, 0x41, 0x44, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x79, 0x70, 0x68, 0x65, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x42, 0x0f, 0x0a, 0x0d, 0x6b, 0x65, 0x79, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x5f, 0x61, 0x6c, 0x67,
	0x6f, 0x1a, 0x50, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x88, 0x01,
	0x01, 0x3a, 0x04, 0xa8, 0xac, 0x1d, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x75, 0x62, 0x5f,
	0x6b, 0x65, 0x79, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x2f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x75,
	0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x2f, 0x6e, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_net_session_proto_rawDescOnce sync.Once
	file_net_session_proto_rawDescData = file_net_session_proto_rawDesc
)

func file_net_session_proto_rawDescGZIP() []byte {
	file_net_session_proto_rawDescOnce.Do(func() {
		file_net_session_proto_rawDescData = protoimpl.X.CompressGZIP(file_net_session_proto_rawDescData)
	})
	return file_net_session_proto_rawDescData
}

var file_net_session_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_net_session_proto_goTypes = []interface{}{
	(*Session)(nil),                             // 0: go_serv.net.Session
	(*Session_Request)(nil),                     // 1: go_serv.net.Session.Request
	(*Session_Response)(nil),                    // 2: go_serv.net.Session.Response
	(*Crypto_PubKeyExchange_DiffieHellman)(nil), // 3: go_serv.net.Crypto_PubKeyExchange.DiffieHellman
	(*Crypto_PubKeyExchange_ECDH)(nil),          // 4: go_serv.net.Crypto_PubKeyExchange.ECDH
	(*Crypto_PubKeyExchange_Rsa)(nil),           // 5: go_serv.net.Crypto_PubKeyExchange.Rsa
	(*Crypto_PubKeyExchange_Psk)(nil),           // 6: go_serv.net.Crypto_PubKeyExchange.Psk
	(Crypto_AEADCipher)(0),                      // 7: go_serv.net.Crypto_AEADCipher
}
var file_net_session_proto_depIdxs = []int32{
	3, // 0: go_serv.net.Session.Request.dh:type_name -> go_serv.net.Crypto_PubKeyExchange.DiffieHellman
	4, // 1: go_serv.net.Session.Request.ecdh:type_name -> go_serv.net.Crypto_PubKeyExchange.ECDH
	5, // 2: go_serv.net.Session.Request.rsa:type_name -> go_serv.net.Crypto_PubKeyExchange.Rsa
	6, // 3: go_serv.net.Session.Request.psk:type_name -> go_serv.net.Crypto_PubKeyExchange.Psk
	7, // 4: go_serv.net.Session.Request.block_cypher:type_name -> go_serv.net.Crypto_AEADCipher
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_net_session_proto_init() }
func file_net_session_proto_init() {
	if File_net_session_proto != nil {
		return
	}
	file_net_crypto_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_net_session_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_net_session_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_net_session_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_net_session_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Session_Request_Dh)(nil),
		(*Session_Request_Ecdh)(nil),
		(*Session_Request_Rsa)(nil),
		(*Session_Request_Psk)(nil),
	}
	file_net_session_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_net_session_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_net_session_proto_goTypes,
		DependencyIndexes: file_net_session_proto_depIdxs,
		MessageInfos:      file_net_session_proto_msgTypes,
	}.Build()
	File_net_session_proto = out.File
	file_net_session_proto_rawDesc = nil
	file_net_session_proto_goTypes = nil
	file_net_session_proto_depIdxs = nil
}
